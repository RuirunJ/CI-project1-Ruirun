rm -r /content/multiscale-interactome

# download data
!wget http://snap.stanford.edu/multiscale-interactome/data/data.tar.gz
!tar -xvf data.tar.gz

pwd

# clone the whole project so that we can use the pre-defined functions and classes
!git clone https://github.com/snap-stanford/multiscale-interactome

# move to the directory of multiscale-interactome so that we can work
%cd ./multiscale-interactome
# install reauired packages
%pip install -r requirements.txt

%load_ext autoreload
%autoreload 2

from msi.msi import MSI
from diff_prof.diffusion_profiles import DiffusionProfiles
import multiprocessing
import numpy as np
import pickle
import networkx as nx
from tests.msi import test_msi
from tests.diff_prof import test_diffusion_profiles

%pwd

msi = MSI()
msi.load()

!unzip /content/multiscale-interactome/data/10_top_msi.zip

# useless
test_msi()

# construct diffusion profiles & no need to change any of these parameters
dp = DiffusionProfiles(alpha = 0.8595436247434408, max_iter = 1000, tol = 1e-06, weights = {'down_biological_function': 4.4863053901688685, 'indication': 3.541889556309463, 'biological_function': 6.583155399238509, 'up_biological_function': 2.09685000906964, 'protein': 4.396695660380823, 'drug': 3.2071696595616364}, num_cores = 2, save_load_file_path = "results/")
dp.calculate_diffusion_profiles(msi)

# load saved diffusion profile
dp_saved = DiffusionProfiles(alpha = None, max_iter = None, tol = None, weights = None, num_cores = None, save_load_file_path = "results/")
msi.load_saved_node_idx_mapping_and_nodelist(dp_saved.save_load_file_path)
dp_saved.load_diffusion_profiles(msi.drugs_in_graph + msi.indications_in_graph)

# dp_saved.drug_or_indication2diffusion_profile["FDB022665"]
# colorectal cancer diffusion profiles
dp_saved.drug_or_indication2diffusion_profile["FDB022665"]

import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from scipy.spatial.distance import correlation

# calculate the distance between two diffusion profiles
#distance[food_presence[food]]=scipy.spatial.distance.correlation(dp_saved.drug_or_indication2diffusion_profile["C0009404"],dp_saved.drug_or_indication2diffusion_profile["DB01268"],w=None,centered=True)
#correlation(dp_saved.drug_or_indication2diffusion_profile["C0009404"],dp_saved.drug_or_indication2diffusion_profile["DB01268"],w=None,centered=True)
drug_to_protein=pd.read_csv('/content/multiscale-interactome/data/1_drug_to_protein.tsv',sep='\t')
distance={}
for fm in drug_to_protein['node_1']:
  array = dp_saved.drug_or_indication2diffusion_profile[fm]
  fm_distance = correlation(dp_saved.drug_or_indication2diffusion_profile['colorectal Carcinoma'],array,w=None,centered=True)
  distance[fm]=fm_distance

data1=dp.refine_M_S(dp.initial_M)[0]
print(type(data1))

print(dp.refine_M_S(dp.initial_M)[0])

import csv

with open('colorectal_genes_disgenet_0.6_distance.csv', 'w') as f:  
    writer = csv.writer(f)
    for k, v in distance.items():
       writer.writerow([k, v])

from google.colab import drive
drive.mount('/content/drive')
